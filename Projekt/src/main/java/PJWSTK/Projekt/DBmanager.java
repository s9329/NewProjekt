package PJWSTK.Projekt;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import PJWSTK.Projekt.PersonDB;

public final class DBmanager {

	private Connection connection;
	private Statement statement;
	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	private ResultSet rs;
	String createTable="CREATE TABLE Person (id bigint GENERATED BY DEFAULT AS IDENTITY," +
					" name varchar(20), ID int, Pets int,";
	private String addPersonSQL="INSERT INTO Person(name,ID,Pets,) " +
			"VALUES (?,?,?);";	
	private String removePersonSQL="";
	private String getAllSQL="";
	private String addPetSQL="";
	private String removePetSQL="";
	private String removeAllPetsSQL="";
	
	String createTable2="CREATE TABLE Pet (id bigint GENERATED BY DEFAULT AS IDENTITY," +
			" name varchar(20), ID int,";
	


	PreparedStatement addPerson;
	PreparedStatement removePerson;
	PreparedStatement getAll;
	PreparedStatement addPet;
	PreparedStatement removePet;
	PreparedStatement removeAllPets;

	private DBmanager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			rs = connection.getMetaData().getTables(null, null, null,
			null);

			boolean tableExists=false;
			while (rs.next()) {
				if ("Person".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
				}
			}

			if(!tableExists)
			{
			statement.executeUpdate(createTable);

			}

			addPerson=connection.prepareStatement(addPersonSQL);
			/*removePerson=connection.prepareStatement(removePersonSQL);
			getAll=connection.prepareStatement(getAllSQL);
			addPet=connection.prepareStatement(addPetsSQL);
			removePets=connection.prepareStatement(removePetsSQL);
			removeAllPets=connection.prepareStatement(removeAllPetsSQL);*/

			} catch (SQLException e) {
			e.printStackTrace();
			}

	}

	private static DBmanager instance;

	public static DBmanager getInstance() {

		if (instance == null)
			synchronized (DBmanager.class) {
				if (instance == null)
					instance = new DBmanager();
			}
		return instance;
	}


	//metody

	public boolean addPerson(PersonDB obj) {
		try {
		addPerson.setString(1, obj.getName());
		addPerson.setInt(2, obj.getID());
		addPerson.setInt(3, obj.getPets());
		
		return addPerson.execute();
		} catch (SQLException e) {
		e.printStackTrace();
		}
		return false;
		}
	public boolean addPet(PetDB obj) {
		try {
		addPet.setString(1, obj.getName());
		addPet.setInt(2, obj.getID());
		
		
		return addPet.execute();
		} catch (SQLException e) {
		e.printStackTrace();
		}
		return false;
		}


	



}